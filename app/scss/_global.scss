html{
    font-size:100%;
    box-sizing: border-box;
}

*, *::before *::after{
    box-sizing: inherit;
}

body{
    margin: 0;
    padding: 0;
    font-size: 1.25rem;
    color: $grayishblue;
    font-weight: 300;
    font-family: 'Public Sans',sans-serif;
    line-height: 1.3;

    &.noscroll{
        overflow: hidden;
    }
}

h1,h2,h3{
    margin-top: 0px;
}


a, a:visited, a:hover{
    text-decoration: none;
}

//Flexbox Styles

.flex{
    display: flex;

    &-jc-sb{
        justify-content: space-between;
    }

    &-jc-c{
        justify-content: center;
    }

    &-ai-c{
        align-items: center;
    }
}

button, .button{  //Should use comma when adding two classes or more
    padding: 0.875rem 2.1875rem;
    background:linear-gradient(to right, $limegreen,$brightcyan);
    color: $white;
    border-radius: 50px;
    cursor: pointer;
    border: 0;
    font-size: $font-sm;
    font-weight: 400;
    display: inline-block;
    font-size: $font-sm;
    transition: opacity 300ms ease-in-out;

        &:hover{
            opacity: 0.75;
        }
    }

//spacing
.container{
    max-width: 69.375rem;
    margin: 0 auto;

    &--pall{
        padding-top: 2.25rem;
        padding-right:1.5rem; // 1rem is equal to 16px
        padding-bottom: 2.25rem;
        padding-left:1.5rem; // 1rem is equal to 16px
    }
    &--py{
        padding-top: 2.25rem;
        padding-bottom: 2.25rem;
    }
    &--px{
        padding-right:1.5rem; 
        padding-left:1.5rem; 
    }
    &--pt{
        padding-top: 2.25rem;
    }
    &--pr{
        padding-right:1.5rem; 
    }
    &--pb{
        padding-bottom: 2.25rem;
    }
    &--pl{
        padding-left:1.5rem; // 1rem is equal to 16px
    }

}




//Mixins 

@media (min-width: 64em){
    // styles go here
  }
  
  // Breakpoints
  // 640px, 1024px, 1400px
  $breakpoints-up: ("medium": "40em", "large": "64em", "xlarge": "87.5em");
  
  // 639px, 1023px, 1399px
  $breakpoints-down: ("small": "39.9375em", "medium": "63.9375em", "large": "87.4375em");
  
  @mixin breakpoint-up($size){
    @media (min-width: map-get($breakpoints-up, $size)){
      @content;
    }
  }
  
  @mixin breakpoint-down($size){
    @media (max-width: map-get($breakpoints-down, $size)){
      @content;
    }
  }

//Visiblity
.hide-for-mobile{ //Hide for mobile  tablets
    @include breakpoint-down(medium){
        display: none;
    }
}

.hide-for-desktop{ //Hide for Desktop
    @include breakpoint-up(large){
        display: none;
    }
}
